{"version":3,"sources":["media/react_logo.svg","media/like.svg","media/d3_logo.svg","charts/bar.js","charts/helpers.js","components/visualization.js","components/chart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","data","i","parseDate","d3","push","x","concat","y","Math","ceil","random","console","log","bar","svg","props","preCalcMargin","margin","top","bottom","left","right","width","height","d","domain","map","rangeRound","padding","range","xAxis","tickFormat","yAxis","attr","chart","append","call","selectAll","style","enter","bandwidth","transition","duration","ease","acquireDrawCalculationsAndThenRedraw","executable","maxNodes","nodes","getComputedTextLength","maxTickX","maxTickY","remove","draw","type","Visualization","this","react_default","a","createElement","className","Component","Chart","charAt","toUpperCase","slice","visualization","defaultProps","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","render","_this2","src","ReactLogo","alt","HeartIcon","D3Logo","marginLeft","onClick","setState","components_chart","header","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b06844e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react_logo.05a3e30f.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.d654ce19.svg\";","module.exports = __webpack_public_path__ + \"static/media/d3_logo.70c72e44.svg\";","import * as d3 from \"d3\";\n\nconst rand = () => Math.ceil(Math.random() * 10000);\n\nconst data = [];\nfor (let i = 0; i < 12; i++) {\n\tconst parseDate = d3.timeParse(\"%Y-%m\");\n\tdata.push({x: parseDate(`2019-${i < 10 ? \"0\" : \"\"}${i + 1}`), y: rand()});\n}\nconsole.log(\"data\", data);\n\nexport const bar = (svg, props, preCalcMargin) => {\n\tconst margin = {\n\t\ttop: 20,\n\t\tbottom: preCalcMargin && preCalcMargin.bottom ? 20 + preCalcMargin.bottom : 20,\n\t\tleft: preCalcMargin && preCalcMargin.left ? 20 + preCalcMargin.left : 20,\n\t\tright: 20 \n\t};\n\tconst fullWidth = 600;\n\tconst fullHeight = 400;\n\tconst width = fullWidth - margin.left - margin.right;\n\tconst height = fullHeight - margin.top - margin.bottom;\n\n\tconsole.log(d3.max(data, d => d.y));\n\n\tconst x = d3.scaleBand().domain(data.map(d => d.x)).rangeRound([0, width]).padding([.05]);\n\tconst y = d3.scaleLinear().domain([0, d3.max(data, d => d.y)]).range([height, 0]);\n\n\tconst xAxis = d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m\"));;\n\tconst yAxis = d3.axisLeft(y);\n\n\tsvg.attr(\"width\", fullWidth).attr(\"height\", fullHeight);\n\n\tconst chart = svg.append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n\tchart.append(\"g\")\n\t\t.attr(\"class\", \"x axis\")\n\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t.call(xAxis)\n\t\t.selectAll(\"text\")\n\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t.attr(\"dx\", \"-.8em\")\n\t\t\t.attr(\"dy\", \"-.55em\")\n\t\t\t.attr(\"transform\", \"rotate(-90)\" );\n\n\tchart.append(\"g\")\n\t\t.attr(\"class\", \"y axis\")\n\t\t.call(yAxis);\n\n    chart.selectAll(\"bar\")\n\t\t.data(data)\n\t\t.enter().append(\"rect\")\n\t\t\t.style(\"fill\", \"steelblue\")\n\t\t\t.attr(\"x\", (d) => { return x(d.x); })\n\t\t\t.attr(\"width\", x.bandwidth())\n\t\t\t.attr(\"y\", height)\n\t\t\t.attr(\"height\", 0)\n\t\t\t.transition()\n\t\t\t.duration(500)\n\t\t\t.ease(d3.easeLinear)\n\t\t\t.attr(\"height\", (d) => { return height - y(d.y); })\n\t\t\t.attr(\"y\", (d) => { return y(d.y); });\n};","import * as d3 from \"d3\";\n\nimport { bar } from \"./bar\";\n\nconst createSvg = () => {\n\treturn d3.select(\".visualization_component\").append(\"svg\").attr(\"class\", \"d3_svg\");\n};\n\nconst removeExistingNodes = () => {\n\td3.select(\".visualization_component > *\").remove();\n};\n\nconst testNodeLength = () => {\n\tconsole.log(d3.selectAll(\".x text\").nodes());\n\treturn {\n\t\tx: d3.max(d3.selectAll(\".x text\").nodes().map(d => d.getComputedTextLength())),\n\t\ty: d3.max(d3.selectAll(\".y text\").nodes().map(d => d.getComputedTextLength()))\n\t};\n};\n\nconst acquireDrawCalculationsAndThenRedraw = (executable, svg, props) => {\n\texecutable(svg);\n\n\tconst maxNodes = testNodeLength();\n\tconst maxTickX = maxNodes.x;\n\tconst maxTickY = maxNodes.y;\n\n\tconsole.log(\"maxNodes\", maxNodes);\n\n\td3.select(\".d3_svg > *\").remove();\n\texecutable(svg, props, {bottom: maxTickX, left: maxTickY});\n};\n\nexport const draw = (props, margin) => {\n\tremoveExistingNodes();\n\n\tconst svg = createSvg();\n\tswitch(props.type) {\n\t\tcase \"bar\":\n\t\t\tacquireDrawCalculationsAndThenRedraw(bar, svg, props);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tacquireDrawCalculationsAndThenRedraw(bar, svg, props);\n\t\t\tbreak;\n\t}\n};","import React, { Component } from 'react';\nimport { draw } from \"../charts/helpers\";\n\nclass Visualization extends Component {\n    componentDidMount() {\n    \tdraw(this.props);\n    }\n\n    componentDidUpdate() {\n    \tdraw(this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"visualization_component\" />\n        );\n    }\n}\n\nexport default Visualization;\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nimport Visualization from \"./visualization\";\nimport \"../styles/chart.css\";\n\nclass Chart extends Component {\n\tstatic propTypes = {\n\t\ttype: PropTypes.oneOf([\n\t\t\t\"bar\"\n\t\t])\n\t};\n\n\tstatic defaultProps = {\n\t\ttype: \"bar\"\n\t};\n\n    render() {\n    \tconst { type } = this.props;\n        return (\n            <div className=\"chart_component\">\n            \t<section className=\"chart_wrapper\">\n            \t\t<h1>{type.charAt(0).toUpperCase() + type.slice(1)} Chart</h1>\n            \t\t<Visualization />\n            \t</section>\n            </div>\n        );\n    }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport Chart from \"./components/chart\";\nimport ReactLogo from \"./media/react_logo.svg\";\nimport HeartIcon from \"./media/like.svg\";\nimport D3Logo from \"./media/d3_logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      render: false\n    };\n  }\n\n  header() {\n    return (\n      <header className=\"App-header\">\n          <div className=\"logos\">\n            <img src={ReactLogo} alt=\"React logo\" style={{width: \"100px\"}} />\n            <img src={HeartIcon} className=\"heart_icon\" alt=\"heart icon\" style={{width: \"20px\", height: \"20px\"}} />\n            <img src={D3Logo} alt=\"D3 logo\" style={{width: \"65px\", height: \"65px\", marginLeft: \"20px\"}} />\n          </div>\n          <p>\n            D3.js Charting Experiments\n          </p>\n          <button className=\"home_button\" onClick={() => this.setState({render: true})}>Let's go!</button>\n      </header>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.render ? <Chart /> : this.header()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}